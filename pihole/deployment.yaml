apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      name: pihole
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          imagePullPolicy: IfNotPresent
      env:
        - name: TZ
          value: Europe/Amsterdam
      volumeMounts:
        - mountPath: /etc/pihole
          name: pihole-config
  volumes:
    - name: pihole-config
      persistentVolumeClaim:
        claimName: pihole-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: dns-tcp
      port: 53
      protocol: TCP
      hostPort: 53
    - name: dns-udp
      port: 53
      protocol: UDP
      hostPort: 53
  selector:
    app: pihole
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  namespace: pihole
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: acmecertresolver
spec:
  rules:
    - host: pihole.martijnj.nl
      http:
        paths:
          - backend:
              service:
                name: pihole
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
    - host: pihole.home.lan
      http:
        paths:
          - backend:
              service:
                name: pihole
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
          - backend:
              service:
                name: pihole
                port:
                  number: 53
            path: /
            pathType: ImplementationSpecific
---
# Redirect to https
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: pihole
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-redirect
  namespace: pihole
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: pihole-https-redirect@kubernetescrd
spec:
  rules:
    - host: pihole.martijnj.nl
      http:
        paths:
          - backend:
              service:
                name: pihole
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
    - host: pihole.home.lan
      http:
        paths:
          - backend:
              service:
                name: pihole
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-pvc
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi
---
# DNS Ports
# - "53:53/tcp"
# - "53:53/udp"
# Default HTTP Port
# - "80:80/tcp"
# Default HTTPs Port. FTL will generate a self-signed certificate
# - "443:443/tcp"
# Uncomment the line below if you are using Pi-hole as your DHCP server
#- "67:67/udp"
# Uncomment the line below if you are using Pi-hole as your NTP server
#- "123:123/udp"
